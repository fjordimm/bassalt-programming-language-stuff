
//////////////////////////////

///// Passing By Reference /////

void Main()
{
	int a = 5;
	DoubleMe(ref a);
	DoubleMeWrapper(ref a);

	int b = 9;
	PrintMe(ref b!);

	int c;
	InitializeMe(outref c);
	InitializeMe(outref int c2); // (MAYBE) you can also declare variables in the function call
}

void DoubleMe(ref int v)
{
	v *= 2;
}

void DoubleMeWrapper(ref int v)
{
	// `ref int` is not a type, it is just saying that the parameter is given by reference...
	// ...so, you still have to be explicit when passing it by reference to something else
	DoubleMe(ref v);
}

// `v` can be an lvalue or rvalue
void PrintMe(ref int! v)
{
	// Cannot write to `v`
	stdout.println(v);
}

// Whatever you pass into `v` does not need to be initialized
void InitializeMe(outref int v)
{
	// Cannot read the value of `v` before assigning it
	v = 13;
	// By the end of the function, `v` must be assigned to something
}

//////////////////////////////

// TODO: outrefs that can assume the referand has been initialized
// TODO: refs that can't assume the referand has been initialized
