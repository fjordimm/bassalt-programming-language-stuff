
// Primitive Types
bool var = false;			// 8 bits	// boolean
char8 var = 0_c8;			// 8 bits	// integer	// unsigned
char var = 0_c;				// 16 bits	// integer	// unsigned
char32 var = 0_c32;			// 32 bits	// integer	// unsigned
sbyte var = 0_sb;			// 8 bits	// integer	// signed
short var = 0_s;			// 16 bits	// integer	// signed
int var = 0_i;				// 32 bits	// integer	// signed
long var = 0_l;				// 64 bits	// integer	// signed
byte var = 0_b;				// 8 bits	// integer	// unsigned
ushort var = 0_us;			// 16 bits	// integer	// unsigned
uint var = 0_ui;			// 32 bits	// integer	// unsigned
ulong var = 0_ul;			// 64 bits	// integer	// unsigned
float var = 0_f;			// 32 bits	// floating-point
double var = 0_d;			// 64 bits	// floating-point
nint var = 0_ni;			// ???		// integer // signed		(Size is system-dependent. Will be the same as a 'signed int' in C)
nlong var = 0_nl;			// ???		// integer // signed		(Size is system-dependent. Will be the same as a 'signed long long int' in C)
unint var = 0_uni;			// ???		// integer // unsigned		(Size is system-dependent. Will be the same as a 'unsigned int' in C)
unlong var = 0_unl;			// ???		// integer // unsigned		(Size is system-dependent. Will be the same as a 'unsigned long long int' in C)
nbigdouble var = 0_nd;		// ???		// floating-point			(Size is system-dependent. Will be the same as a 'long double' in C)
sizet var = 0_z;			// ???		// integer // unsigned		(Size is system-dependent. Will be the same as a 'size_t' in C)

// Built-in Portable Classes
int128 var = 0_ii;			// 128 bits	// integer	// signed
uint128 var = 0_uii;		// 128 bits	// integer	// unsigned
int256 var = 0_iii;			// 256 bits	// integer	// signed
uint256 var = 0_uiii;		// 256 bits	// integer	// unsigned
rgba var = 0_r;				// 32 bits	// integer	// unsigned		(Not meant to be used as an integer. See '42_BuiltInStructs')
datetime var = 0_t;			// 64 bits	// integer	// unsigned		(Not meant to be used as an integer. See '42_BuiltInStructs')

// Built-in Non-portable Classes
string var => "hello";