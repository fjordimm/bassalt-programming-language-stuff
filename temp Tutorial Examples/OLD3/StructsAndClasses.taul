
void Main()
{
	Couple coup = Couple{$a = 'X', $b = 'Y'};
	print coup.a;
	coup.a = 'M';

	Pair pair => ('X', 'Y');
	pair = Pair('X', 'Y');
	pair = Pair(){$a = 'X', $b = 'Y'};
	print pair.a;
	pair.a = 'M';
}

struct Couple
{
	char a;
	char b;
}

portable class Pair
{
	// Instead of the below, you could write 'struct: Couple;'
	struct:
	{
		char a {public get, set, init};
		char b {public get, set, init};
	}

	// You can use the 'this' keyword and don't have to include the '{self}'
	public accmethod{self} bool contains(char chr)
	{
		return self@.a == chr || self@.b == chr;
	}

	public accmethod bool cntns(char chr)
	{
		return this.a == chr || this.b == chr;
		// The 'this' keyword is like a reference to an instance of a class, but you don't need to dereference it
	}

	// Again, you can use the 'this' keyword instead of the '{self}'
	public constructor{self} ()
	{
		self@.a = 'A';
		self@.b = 'A';
	}

	public constructor (char a, char b)
	{
		this.a = a;
		this.b = b;
	}
}
